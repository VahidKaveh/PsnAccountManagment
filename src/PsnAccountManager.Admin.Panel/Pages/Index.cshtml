@page
@model IndexModel
@{
    ViewData["Title"] = "Dashboard";
}

<!-- Anti-Forgery Token for AJAX Requests -->
@Html.AntiForgeryToken()

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">
                    <i class="fas fa-tachometer-alt text-primary mr-2"></i>Dashboard
                </h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item active">Dashboard</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<!-- Status Message -->
@if (!string.IsNullOrEmpty(Model.StatusMessage))
{
    <div class="alert alert-info alert-dismissible">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <i class="icon fas fa-info mr-2"></i>@Model.StatusMessage
    </div>
}

<!-- Main content -->
<div class="content">
    <div class="container-fluid">
        <!-- Statistics Cards Row -->
        <div class="row">
            <!-- Total Accounts -->
            <div class="col-lg-3 col-6">
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3 id="total-accounts">@Model.TotalAccounts</h3>
                        <p>Total Accounts</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-users"></i>
                    </div>
                    <a asp-page="/Accounts/Index" class="small-box-footer">
                        More info <i class="fas fa-arrow-circle-right"></i>
                    </a>
                </div>
            </div>

            <!-- Active Accounts -->
            <div class="col-lg-3 col-6">
                <div class="small-box bg-success">
                    <div class="inner">
                        <h3 id="active-accounts">@Model.ActiveAccounts</h3>
                        <p>Active (In Stock)</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <a asp-page="/Accounts/Index" class="small-box-footer">
                        More info <i class="fas fa-arrow-circle-right"></i>
                    </a>
                </div>
            </div>

            <!-- Total Games -->
            <div class="col-lg-3 col-6">
                <div class="small-box bg-warning">
                    <div class="inner">
                        <h3 id="total-games">@Model.TotalGames</h3>
                        <p>Games Library</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-gamepad"></i>
                    </div>
                    <a asp-page="/Games/Index" class="small-box-footer">
                        More info <i class="fas fa-arrow-circle-right"></i>
                    </a>
                </div>
            </div>

            <!-- Pending Purchases -->
            <div class="col-lg-3 col-6">
                <div class="small-box bg-danger">
                    <div class="inner">
                        <h3 id="pending-purchases">@Model.PendingPurchases</h3>
                        <p>Pending Orders</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-shopping-cart"></i>
                    </div>
                    <a asp-page="/Purchases/Index" class="small-box-footer">
                        More info <i class="fas fa-arrow-circle-right"></i>
                    </a>
                </div>
            </div>
        </div>

        <!-- Main Content Row -->
        <div class="row">
            <!-- Left Column - Quick Actions -->
            <div class="col-md-6">
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fas fa-bolt mr-2"></i>Quick Actions
                        </h3>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-12 mb-3">
                                <a asp-page="/Games/Create" class="btn btn-primary btn-block btn-lg">
                                    <i class="fas fa-plus mr-2"></i> Add New Game
                                </a>
                            </div>
                            <div class="col-12 mb-3">
                                <a asp-page="/Channels/Index" class="btn btn-info btn-block btn-lg">
                                    <i class="fab fa-telegram mr-2"></i> Manage Channels
                                </a>
                            </div>
                            <div class="col-12 mb-3">
                                <a asp-page="/Accounts/Index" class="btn btn-success btn-block btn-lg">
                                    <i class="fas fa-list mr-2"></i> View All Accounts
                                </a>
                            </div>
                            <div class="col-12">
                                <a asp-page="/Inbox/Index" class="btn btn-warning btn-block btn-lg">
                                    <i class="fas fa-inbox mr-2"></i> Process Messages
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Column - System Status -->
            <div class="col-md-6">
                <div class="card card-outline" id="scraper-status-card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fas fa-server mr-2"></i>Scraper System Status
                        </h3>
                    </div>
                    <div class="card-body">
                        <!-- Status Badge -->
                        <div id="status-badge-container" class="text-center mb-4">
                            <!-- Will be populated by JavaScript -->
                        </div>

                        <!-- Status Details -->
                        <div class="info-box">
                            <span class="info-box-icon bg-info"><i class="fas fa-activity"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Current Activity</span>
                                <span class="info-box-number" id="current-activity">Loading...</span>
                            </div>
                        </div>

                        <div class="info-box">
                            <span class="info-box-icon bg-success"><i class="fas fa-clock"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Last Cycle Finish</span>
                                <span class="info-box-number" id="last-run-finish">Loading...</span>
                            </div>
                        </div>

                        <div class="info-box">
                            <span class="info-box-icon bg-warning"><i class="fas fa-stopwatch"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Last Duration</span>
                                <span class="info-box-number" id="last-run-duration">Loading...</span>
                            </div>
                        </div>

                        <div class="info-box">
                            <span class="info-box-icon bg-danger"><i class="fas fa-envelope"></i></span>
                            <div class="info-box-content">
                                <span class="info-box-text">Messages (Last Run)</span>
                                <span class="info-box-number" id="messages-last-run">Loading...</span>
                            </div>
                        </div>
                    </div>

                    <!-- Control Footer -->
                    <div class="card-footer">
                        <div id="worker-controls">
                            <!-- Will be populated by JavaScript -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <!-- SignalR Client Library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.5/signalr.min.js"></script>

    <script>
        $(document).ready(function() {
            console.log("Dashboard initializing...");

            // Get initial status from server with safe serialization
            let initialStatus = null;
            try {
                initialStatus = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.WorkerStatus, new System.Text.Json.JsonSerializerOptions
                {
                        PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase,
                        Converters = { new System.Text.Json.Serialization.JsonStringEnumConverter() }
                }));
            console.log("Initial status loaded:", initialStatus);
        } catch (error) {
            console.error("Failed to parse initial status:", error);
            initialStatus = {
                isEnabled: false,
                currentActivity: "Stopped",
                currentActivityMessage: "Status unavailable",
                lastRunFinishedAt: null,
                lastRunDuration: null,
                messagesFoundInLastRun: 0
            };
        }

            function updateStatusUI(status) {
                console.log("Updating UI with:", status);

                if (!status) {
                    console.warn("Status is null, using default");
                    status = {
                        isEnabled: false,
                        currentActivityMessage: "Unknown",
                        lastRunFinishedAt: null,
                        lastRunDuration: null,
                        messagesFoundInLastRun: 0
                    };
                }

                // Update badge
                const badgeHtml = status.isEnabled
                    ? `<span class="status-badge bg-success text-white animate-pulse"><i class="fas fa-play-circle mr-2"></i>RUNNING</span>`
                    : `<span class="status-badge bg-danger text-white"><i class="fas fa-stop-circle mr-2"></i>STOPPED</span>`;
                $('#status-badge-container').html(badgeHtml);

                // Update info boxes
                $('#current-activity').text(status.currentActivityMessage || 'Unknown');
                $('#last-run-finish').text(status.lastRunFinishedAt ? new Date(status.lastRunFinishedAt).toLocaleString() : 'Never');

                // Format duration safely
                let durationText = 'N/A';
                if (status.lastRunDuration) {
                    if (typeof status.lastRunDuration === 'string') {
                        durationText = status.lastRunDuration;
                    } else if (status.lastRunDuration.totalSeconds) {
                        const minutes = Math.floor(status.lastRunDuration.totalSeconds / 60);
                        const seconds = Math.floor(status.lastRunDuration.totalSeconds % 60);
                        durationText = `${minutes}m ${seconds}s`;
                    }
                }
                $('#last-run-duration').text(durationText);
                $('#messages-last-run').text(status.messagesFoundInLastRun || '0');

                // Update control button
                const buttonHtml = status.isEnabled
                    ? `<button id="stop-worker-btn" class="btn btn-danger btn-block btn-lg"><i class="fas fa-stop-circle mr-2"></i>Stop Scraper</button>`
                    : `<button id="start-worker-btn" class="btn btn-success btn-block btn-lg"><i class="fas fa-play-circle mr-2"></i>Start Scraper</button>`;
                $('#worker-controls').html(buttonHtml);

                // Update card color
                const card = $('#scraper-status-card');
                card.removeClass('card-outline-success card-outline-danger');
                card.addClass(status.isEnabled ? 'card-outline-success' : 'card-outline-danger');
            }

            // Initialize UI immediately
            updateStatusUI(initialStatus);

            // SignalR connection
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/dashboardHub")
                .configureLogging(signalR.LogLevel.Warning)
                .build();

            connection.on("ReceiveStatusUpdate", function(status) {
                console.log("SignalR update received:", status);
                updateStatusUI(status);
            });

            connection.start()
                .then(() => {
                    console.log("SignalR connected successfully");
                })
                .catch(err => {
                    console.warn("SignalR connection failed:", err);
                });

            // Button handlers
            $(document).on('click', '#stop-worker-btn, #start-worker-btn', function() {
                const button = $(this);
                const isStopping = button.attr('id') === 'stop-worker-btn';
                const handler = isStopping ? 'StopWorker' : 'StartWorker';

                button.prop('disabled', true)
                    .html(`<i class="fas fa-spinner fa-spin mr-2"></i>${isStopping ? 'Stopping...' : 'Starting...'}`);

                $.ajax({
                    type: "POST",
                    url: `?handler=${handler}`,
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    success: function() {
                        console.log(`${handler} successful`);
                        // UI will be updated via SignalR
                    },
                    error: function(xhr) {
                        console.error(`${handler} failed:`, xhr);
                        alert(`Failed to ${isStopping ? 'stop' : 'start'} worker`);
                        updateStatusUI(initialStatus); // Revert
                    }
                });
            });
        });
    </script>

}
